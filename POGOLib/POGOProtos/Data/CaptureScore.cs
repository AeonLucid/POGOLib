// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Data/CaptureScore.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Data {

  /// <summary>Holder for reflection information generated from Data/CaptureScore.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class CaptureScoreReflection {

    #region Descriptor
    /// <summary>File descriptor for Data/CaptureScore.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CaptureScoreReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdEYXRhL0NhcHR1cmVTY29yZS5wcm90bxIPUE9HT1Byb3Rvcy5EYXRhGhhF",
            "bnVtcy9BY3Rpdml0eVR5cGUucHJvdG8icgoMQ2FwdHVyZVNjb3JlEjUKDWFj",
            "dGl2aXR5X3R5cGUYASADKA4yHi5QT0dPUHJvdG9zLkVudW1zLkFjdGl2aXR5",
            "VHlwZRIKCgJ4cBgCIAMoBRINCgVjYW5keRgDIAMoBRIQCghzdGFyZHVzdBgE",
            "IAMoBVAAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Enums.ActivityTypeReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Data.CaptureScore), global::POGOProtos.Data.CaptureScore.Parser, new[]{ "ActivityType", "Xp", "Candy", "Stardust" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CaptureScore : pb::IMessage<CaptureScore> {
    private static readonly pb::MessageParser<CaptureScore> _parser = new pb::MessageParser<CaptureScore>(() => new CaptureScore());
    public static pb::MessageParser<CaptureScore> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Data.CaptureScoreReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public CaptureScore() {
      OnConstruction();
    }

    partial void OnConstruction();

    public CaptureScore(CaptureScore other) : this() {
      activityType_ = other.activityType_.Clone();
      xp_ = other.xp_.Clone();
      candy_ = other.candy_.Clone();
      stardust_ = other.stardust_.Clone();
    }

    public CaptureScore Clone() {
      return new CaptureScore(this);
    }

    /// <summary>Field number for the "activity_type" field.</summary>
    public const int ActivityTypeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::POGOProtos.Enums.ActivityType> _repeated_activityType_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::POGOProtos.Enums.ActivityType) x);
    private readonly pbc::RepeatedField<global::POGOProtos.Enums.ActivityType> activityType_ = new pbc::RepeatedField<global::POGOProtos.Enums.ActivityType>();
    public pbc::RepeatedField<global::POGOProtos.Enums.ActivityType> ActivityType {
      get { return activityType_; }
    }

    /// <summary>Field number for the "xp" field.</summary>
    public const int XpFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_xp_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> xp_ = new pbc::RepeatedField<int>();
    public pbc::RepeatedField<int> Xp {
      get { return xp_; }
    }

    /// <summary>Field number for the "candy" field.</summary>
    public const int CandyFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_candy_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> candy_ = new pbc::RepeatedField<int>();
    public pbc::RepeatedField<int> Candy {
      get { return candy_; }
    }

    /// <summary>Field number for the "stardust" field.</summary>
    public const int StardustFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_stardust_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> stardust_ = new pbc::RepeatedField<int>();
    public pbc::RepeatedField<int> Stardust {
      get { return stardust_; }
    }

    public override bool Equals(object other) {
      return Equals(other as CaptureScore);
    }

    public bool Equals(CaptureScore other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!activityType_.Equals(other.activityType_)) return false;
      if(!xp_.Equals(other.xp_)) return false;
      if(!candy_.Equals(other.candy_)) return false;
      if(!stardust_.Equals(other.stardust_)) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      hash ^= activityType_.GetHashCode();
      hash ^= xp_.GetHashCode();
      hash ^= candy_.GetHashCode();
      hash ^= stardust_.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      activityType_.WriteTo(output, _repeated_activityType_codec);
      xp_.WriteTo(output, _repeated_xp_codec);
      candy_.WriteTo(output, _repeated_candy_codec);
      stardust_.WriteTo(output, _repeated_stardust_codec);
    }

    public int CalculateSize() {
      int size = 0;
      size += activityType_.CalculateSize(_repeated_activityType_codec);
      size += xp_.CalculateSize(_repeated_xp_codec);
      size += candy_.CalculateSize(_repeated_candy_codec);
      size += stardust_.CalculateSize(_repeated_stardust_codec);
      return size;
    }

    public void MergeFrom(CaptureScore other) {
      if (other == null) {
        return;
      }
      activityType_.Add(other.activityType_);
      xp_.Add(other.xp_);
      candy_.Add(other.candy_);
      stardust_.Add(other.stardust_);
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10:
          case 8: {
            activityType_.AddEntriesFrom(input, _repeated_activityType_codec);
            break;
          }
          case 18:
          case 16: {
            xp_.AddEntriesFrom(input, _repeated_xp_codec);
            break;
          }
          case 26:
          case 24: {
            candy_.AddEntriesFrom(input, _repeated_candy_codec);
            break;
          }
          case 34:
          case 32: {
            stardust_.AddEntriesFrom(input, _repeated_stardust_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
