// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Map/Pokemon/WildPokemon.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOLib.Pokemon.Proto.Map.Pokemon {

  /// <summary>Holder for reflection information generated from Map/Pokemon/WildPokemon.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class WildPokemonReflection {

    #region Descriptor
    /// <summary>File descriptor for Map/Pokemon/WildPokemon.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WildPokemonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1NYXAvUG9rZW1vbi9XaWxkUG9rZW1vbi5wcm90bxIhUE9HT0xpYi5Qb2tl",
            "bW9uLlByb3RvLk1hcC5Qb2tlbW9uIqABCgtXaWxkUG9rZW1vbhITCgtFbmNv",
            "dW50ZXJJZBgBIAEoBRIWCg5MYXN0TW9kaWZpZWRNcxgCIAEoBRIQCghMYXRp",
            "dHVkZRgDIAEoBRIRCglMb25naXR1ZGUYBCABKAUSFAoMU3Bhd25Qb2ludElk",
            "GAUgASgFEg8KB1Bva2Vtb24YByABKAUSGAoQVGltZVRpbGxIaWRkZW5NcxgL",
            "IAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOLib.Pokemon.Proto.Map.Pokemon.WildPokemon), global::POGOLib.Pokemon.Proto.Map.Pokemon.WildPokemon.Parser, new[]{ "EncounterId", "LastModifiedMs", "Latitude", "Longitude", "SpawnPointId", "Pokemon", "TimeTillHiddenMs" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class WildPokemon : pb::IMessage<WildPokemon> {
    private static readonly pb::MessageParser<WildPokemon> _parser = new pb::MessageParser<WildPokemon>(() => new WildPokemon());
    public static pb::MessageParser<WildPokemon> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOLib.Pokemon.Proto.Map.Pokemon.WildPokemonReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public WildPokemon() {
      OnConstruction();
    }

    partial void OnConstruction();

    public WildPokemon(WildPokemon other) : this() {
      encounterId_ = other.encounterId_;
      lastModifiedMs_ = other.lastModifiedMs_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      spawnPointId_ = other.spawnPointId_;
      pokemon_ = other.pokemon_;
      timeTillHiddenMs_ = other.timeTillHiddenMs_;
    }

    public WildPokemon Clone() {
      return new WildPokemon(this);
    }

    /// <summary>Field number for the "EncounterId" field.</summary>
    public const int EncounterIdFieldNumber = 1;
    private int encounterId_;
    public int EncounterId {
      get { return encounterId_; }
      set {
        encounterId_ = value;
      }
    }

    /// <summary>Field number for the "LastModifiedMs" field.</summary>
    public const int LastModifiedMsFieldNumber = 2;
    private int lastModifiedMs_;
    public int LastModifiedMs {
      get { return lastModifiedMs_; }
      set {
        lastModifiedMs_ = value;
      }
    }

    /// <summary>Field number for the "Latitude" field.</summary>
    public const int LatitudeFieldNumber = 3;
    private int latitude_;
    public int Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "Longitude" field.</summary>
    public const int LongitudeFieldNumber = 4;
    private int longitude_;
    public int Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "SpawnPointId" field.</summary>
    public const int SpawnPointIdFieldNumber = 5;
    private int spawnPointId_;
    public int SpawnPointId {
      get { return spawnPointId_; }
      set {
        spawnPointId_ = value;
      }
    }

    /// <summary>Field number for the "Pokemon" field.</summary>
    public const int PokemonFieldNumber = 7;
    private int pokemon_;
    public int Pokemon {
      get { return pokemon_; }
      set {
        pokemon_ = value;
      }
    }

    /// <summary>Field number for the "TimeTillHiddenMs" field.</summary>
    public const int TimeTillHiddenMsFieldNumber = 11;
    private int timeTillHiddenMs_;
    public int TimeTillHiddenMs {
      get { return timeTillHiddenMs_; }
      set {
        timeTillHiddenMs_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as WildPokemon);
    }

    public bool Equals(WildPokemon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EncounterId != other.EncounterId) return false;
      if (LastModifiedMs != other.LastModifiedMs) return false;
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      if (SpawnPointId != other.SpawnPointId) return false;
      if (Pokemon != other.Pokemon) return false;
      if (TimeTillHiddenMs != other.TimeTillHiddenMs) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (EncounterId != 0) hash ^= EncounterId.GetHashCode();
      if (LastModifiedMs != 0) hash ^= LastModifiedMs.GetHashCode();
      if (Latitude != 0) hash ^= Latitude.GetHashCode();
      if (Longitude != 0) hash ^= Longitude.GetHashCode();
      if (SpawnPointId != 0) hash ^= SpawnPointId.GetHashCode();
      if (Pokemon != 0) hash ^= Pokemon.GetHashCode();
      if (TimeTillHiddenMs != 0) hash ^= TimeTillHiddenMs.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (EncounterId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(EncounterId);
      }
      if (LastModifiedMs != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(LastModifiedMs);
      }
      if (Latitude != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Latitude);
      }
      if (Longitude != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Longitude);
      }
      if (SpawnPointId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SpawnPointId);
      }
      if (Pokemon != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Pokemon);
      }
      if (TimeTillHiddenMs != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(TimeTillHiddenMs);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (EncounterId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EncounterId);
      }
      if (LastModifiedMs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastModifiedMs);
      }
      if (Latitude != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Latitude);
      }
      if (Longitude != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Longitude);
      }
      if (SpawnPointId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpawnPointId);
      }
      if (Pokemon != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Pokemon);
      }
      if (TimeTillHiddenMs != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TimeTillHiddenMs);
      }
      return size;
    }

    public void MergeFrom(WildPokemon other) {
      if (other == null) {
        return;
      }
      if (other.EncounterId != 0) {
        EncounterId = other.EncounterId;
      }
      if (other.LastModifiedMs != 0) {
        LastModifiedMs = other.LastModifiedMs;
      }
      if (other.Latitude != 0) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0) {
        Longitude = other.Longitude;
      }
      if (other.SpawnPointId != 0) {
        SpawnPointId = other.SpawnPointId;
      }
      if (other.Pokemon != 0) {
        Pokemon = other.Pokemon;
      }
      if (other.TimeTillHiddenMs != 0) {
        TimeTillHiddenMs = other.TimeTillHiddenMs;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            EncounterId = input.ReadInt32();
            break;
          }
          case 16: {
            LastModifiedMs = input.ReadInt32();
            break;
          }
          case 24: {
            Latitude = input.ReadInt32();
            break;
          }
          case 32: {
            Longitude = input.ReadInt32();
            break;
          }
          case 40: {
            SpawnPointId = input.ReadInt32();
            break;
          }
          case 56: {
            Pokemon = input.ReadInt32();
            break;
          }
          case 88: {
            TimeTillHiddenMs = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
