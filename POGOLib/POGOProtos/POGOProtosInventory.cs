// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: POGOProtos.Inventory.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos.Inventory {

  /// <summary>Holder for reflection information generated from POGOProtos.Inventory.proto</summary>
  public static partial class POGOProtosInventoryReflection {

    #region Descriptor
    /// <summary>File descriptor for POGOProtos.Inventory.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static POGOProtosInventoryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpQT0dPUHJvdG9zLkludmVudG9yeS5wcm90bxIUUE9HT1Byb3Rvcy5JbnZl",
            "bnRvcnkaFVBPR09Qcm90b3MuRGF0YS5wcm90bxocUE9HT1Byb3Rvcy5EYXRh",
            "LlBsYXllci5wcm90bxoWUE9HT1Byb3Rvcy5FbnVtcy5wcm90byKWAQoLQXBw",
            "bGllZEl0ZW0SLQoHaXRlbV9pZBgBIAEoDjIcLlBPR09Qcm90b3MuSW52ZW50",
            "b3J5Lkl0ZW1JZBIxCglpdGVtX3R5cGUYAiABKA4yHi5QT0dPUHJvdG9zLklu",
            "dmVudG9yeS5JdGVtVHlwZRIRCglleHBpcmVfbXMYAyABKAMSEgoKYXBwbGll",
            "ZF9tcxgEIAEoAyI/CgxBcHBsaWVkSXRlbXMSLwoEaXRlbRgEIAMoCzIhLlBP",
            "R09Qcm90b3MuSW52ZW50b3J5LkFwcGxpZWRJdGVtIugBCgxFZ2dJbmN1YmF0",
            "b3ISCgoCaWQYASABKAkSLQoHaXRlbV9pZBgCIAEoDjIcLlBPR09Qcm90b3Mu",
            "SW52ZW50b3J5Lkl0ZW1JZBI+Cg5pbmN1YmF0b3JfdHlwZRgDIAEoDjImLlBP",
            "R09Qcm90b3MuSW52ZW50b3J5LkVnZ0luY3ViYXRvclR5cGUSFgoOdXNlc19y",
            "ZW1haW5pbmcYBCABKAUSEgoKcG9rZW1vbl9pZBgFIAEoBBIXCg9zdGFydF9r",
            "bV93YWxrZWQYBiABKAESGAoQdGFyZ2V0X2ttX3dhbGtlZBgHIAEoASJKCg1F",
            "Z2dJbmN1YmF0b3JzEjkKDWVnZ19pbmN1YmF0b3IYASADKAsyIi5QT0dPUHJv",
            "dG9zLkludmVudG9yeS5FZ2dJbmN1YmF0b3IihwEKDkludmVudG9yeURlbHRh",
            "Eh0KFW9yaWdpbmFsX3RpbWVzdGFtcF9tcxgBIAEoAxIYChBuZXdfdGltZXN0",
            "YW1wX21zGAIgASgDEjwKD2ludmVudG9yeV9pdGVtcxgDIAMoCzIjLlBPR09Q",
            "cm90b3MuSW52ZW50b3J5LkludmVudG9yeUl0ZW0ijgEKDUludmVudG9yeUl0",
            "ZW0SHQoVbW9kaWZpZWRfdGltZXN0YW1wX21zGAEgASgDEhgKEGRlbGV0ZWRf",
            "aXRlbV9rZXkYAiABKAMSRAoTaW52ZW50b3J5X2l0ZW1fZGF0YRgDIAEoCzIn",
            "LlBPR09Qcm90b3MuSW52ZW50b3J5LkludmVudG9yeUl0ZW1EYXRhItoEChFJ",
            "bnZlbnRvcnlJdGVtRGF0YRIyCgxwb2tlbW9uX2RhdGEYASABKAsyHC5QT0dP",
            "UHJvdG9zLkRhdGEuUG9rZW1vbkRhdGESKAoEaXRlbRgCIAEoCzIaLlBPR09Q",
            "cm90b3MuSW52ZW50b3J5Lkl0ZW0SNAoNcG9rZWRleF9lbnRyeRgDIAEoCzId",
            "LlBPR09Qcm90b3MuRGF0YS5Qb2tlZGV4RW50cnkSOQoMcGxheWVyX3N0YXRz",
            "GAQgASgLMiMuUE9HT1Byb3Rvcy5EYXRhLlBsYXllci5QbGF5ZXJTdGF0cxI/",
            "Cg9wbGF5ZXJfY3VycmVuY3kYBSABKAsyJi5QT0dPUHJvdG9zLkRhdGEuUGxh",
            "eWVyLlBsYXllckN1cnJlbmN5EjsKDXBsYXllcl9jYW1lcmEYBiABKAsyJC5Q",
            "T0dPUHJvdG9zLkRhdGEuUGxheWVyLlBsYXllckNhbWVyYRJDChJpbnZlbnRv",
            "cnlfdXBncmFkZXMYByABKAsyJy5QT0dPUHJvdG9zLkludmVudG9yeS5JbnZl",
            "bnRvcnlVcGdyYWRlcxI5Cg1hcHBsaWVkX2l0ZW1zGAggASgLMiIuUE9HT1By",
            "b3Rvcy5JbnZlbnRvcnkuQXBwbGllZEl0ZW1zEjsKDmVnZ19pbmN1YmF0b3Jz",
            "GAkgASgLMiMuUE9HT1Byb3Rvcy5JbnZlbnRvcnkuRWdnSW5jdWJhdG9ycxI7",
            "Cg5wb2tlbW9uX2ZhbWlseRgKIAEoCzIjLlBPR09Qcm90b3MuSW52ZW50b3J5",
            "LlBva2Vtb25GYW1pbHkinwEKEEludmVudG9yeVVwZ3JhZGUSLQoHaXRlbV9p",
            "ZBgBIAEoDjIcLlBPR09Qcm90b3MuSW52ZW50b3J5Lkl0ZW1JZBJACgx1cGdy",
            "YWRlX3R5cGUYAiABKA4yKi5QT0dPUHJvdG9zLkludmVudG9yeS5JbnZlbnRv",
            "cnlVcGdyYWRlVHlwZRIaChJhZGRpdGlvbmFsX3N0b3JhZ2UYAyABKAUiVwoR",
            "SW52ZW50b3J5VXBncmFkZXMSQgoSaW52ZW50b3J5X3VwZ3JhZGVzGAEgAygL",
            "MiYuUE9HT1Byb3Rvcy5JbnZlbnRvcnkuSW52ZW50b3J5VXBncmFkZSJUCgRJ",
            "dGVtEi0KB2l0ZW1faWQYASABKA4yHC5QT0dPUHJvdG9zLkludmVudG9yeS5J",
            "dGVtSWQSDQoFY291bnQYAiABKAUSDgoGdW5zZWVuGAMgASgIIk4KCUl0ZW1B",
            "d2FyZBItCgdpdGVtX2lkGAEgASgOMhwuUE9HT1Byb3Rvcy5JbnZlbnRvcnku",
            "SXRlbUlkEhIKCml0ZW1fY291bnQYAiABKAUiVAoNUG9rZW1vbkZhbWlseRI0",
            "CglmYW1pbHlfaWQYASABKA4yIS5QT0dPUHJvdG9zLkVudW1zLlBva2Vtb25G",
            "YW1pbHlJZBINCgVjYW5keRgCIAEoBSo/ChBFZ2dJbmN1YmF0b3JUeXBlEhMK",
            "D0lOQ1VCQVRPUl9VTlNFVBAAEhYKEklOQ1VCQVRPUl9ESVNUQU5DRRABKmIK",
            "FEludmVudG9yeVVwZ3JhZGVUeXBlEhEKDVVQR1JBREVfVU5TRVQQABIZChVJ",
            "TkNSRUFTRV9JVEVNX1NUT1JBR0UQARIcChhJTkNSRUFTRV9QT0tFTU9OX1NU",
            "T1JBR0UQAirHBQoGSXRlbUlkEhAKDElURU1fVU5LTk9XThAAEhIKDklURU1f",
            "UE9LRV9CQUxMEAESEwoPSVRFTV9HUkVBVF9CQUxMEAISEwoPSVRFTV9VTFRS",
            "QV9CQUxMEAMSFAoQSVRFTV9NQVNURVJfQkFMTBAEEg8KC0lURU1fUE9USU9O",
            "EGUSFQoRSVRFTV9TVVBFUl9QT1RJT04QZhIVChFJVEVNX0hZUEVSX1BPVElP",
            "ThBnEhMKD0lURU1fTUFYX1BPVElPThBoEhAKC0lURU1fUkVWSVZFEMkBEhQK",
            "D0lURU1fTUFYX1JFVklWRRDKARITCg5JVEVNX0xVQ0tZX0VHRxCtAhIaChVJ",
            "VEVNX0lOQ0VOU0VfT1JESU5BUlkQkQMSFwoSSVRFTV9JTkNFTlNFX1NQSUNZ",
            "EJIDEhYKEUlURU1fSU5DRU5TRV9DT09MEJMDEhgKE0lURU1fSU5DRU5TRV9G",
            "TE9SQUwQlAMSEwoOSVRFTV9UUk9ZX0RJU0sQ9QMSEgoNSVRFTV9YX0FUVEFD",
            "SxDaBBITCg5JVEVNX1hfREVGRU5TRRDbBBITCg5JVEVNX1hfTUlSQUNMRRDc",
            "BBIUCg9JVEVNX1JBWlpfQkVSUlkQvQUSFAoPSVRFTV9CTFVLX0JFUlJZEL4F",
            "EhUKEElURU1fTkFOQUJfQkVSUlkQvwUSFQoQSVRFTV9XRVBBUl9CRVJSWRDA",
            "BRIVChBJVEVNX1BJTkFQX0JFUlJZEMEFEhgKE0lURU1fU1BFQ0lBTF9DQU1F",
            "UkEQoQYSIwoeSVRFTV9JTkNVQkFUT1JfQkFTSUNfVU5MSU1JVEVEEIUHEhkK",
            "FElURU1fSU5DVUJBVE9SX0JBU0lDEIYHEiEKHElURU1fUE9LRU1PTl9TVE9S",
            "QUdFX1VQR1JBREUQ6QcSHgoZSVRFTV9JVEVNX1NUT1JBR0VfVVBHUkFERRDq",
            "ByqyAgoISXRlbVR5cGUSEgoOSVRFTV9UWVBFX05PTkUQABIWChJJVEVNX1RZ",
            "UEVfUE9LRUJBTEwQARIUChBJVEVNX1RZUEVfUE9USU9OEAISFAoQSVRFTV9U",
            "WVBFX1JFVklWRRADEhEKDUlURU1fVFlQRV9NQVAQBBIUChBJVEVNX1RZUEVf",
            "QkFUVExFEAUSEgoOSVRFTV9UWVBFX0ZPT0QQBhIUChBJVEVNX1RZUEVfQ0FN",
            "RVJBEAcSEgoOSVRFTV9UWVBFX0RJU0sQCBIXChNJVEVNX1RZUEVfSU5DVUJB",
            "VE9SEAkSFQoRSVRFTV9UWVBFX0lOQ0VOU0UQChIWChJJVEVNX1RZUEVfWFBf",
            "Qk9PU1QQCxIfChtJVEVNX1RZUEVfSU5WRU5UT1JZX1VQR1JBREUQDFAAUAFQ",
            "AmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Data.POGOProtosDataReflection.Descriptor, global::POGOProtos.Data.Player.POGOProtosDataPlayerReflection.Descriptor, global::POGOProtos.Enums.POGOProtosEnumsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::POGOProtos.Inventory.EggIncubatorType), typeof(global::POGOProtos.Inventory.InventoryUpgradeType), typeof(global::POGOProtos.Inventory.ItemId), typeof(global::POGOProtos.Inventory.ItemType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.AppliedItem), global::POGOProtos.Inventory.AppliedItem.Parser, new[]{ "ItemId", "ItemType", "ExpireMs", "AppliedMs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.AppliedItems), global::POGOProtos.Inventory.AppliedItems.Parser, new[]{ "Item" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.EggIncubator), global::POGOProtos.Inventory.EggIncubator.Parser, new[]{ "Id", "ItemId", "IncubatorType", "UsesRemaining", "PokemonId", "StartKmWalked", "TargetKmWalked" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.EggIncubators), global::POGOProtos.Inventory.EggIncubators.Parser, new[]{ "EggIncubator" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.InventoryDelta), global::POGOProtos.Inventory.InventoryDelta.Parser, new[]{ "OriginalTimestampMs", "NewTimestampMs", "InventoryItems" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.InventoryItem), global::POGOProtos.Inventory.InventoryItem.Parser, new[]{ "ModifiedTimestampMs", "DeletedItemKey", "InventoryItemData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.InventoryItemData), global::POGOProtos.Inventory.InventoryItemData.Parser, new[]{ "PokemonData", "Item", "PokedexEntry", "PlayerStats", "PlayerCurrency", "PlayerCamera", "InventoryUpgrades", "AppliedItems", "EggIncubators", "PokemonFamily" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.InventoryUpgrade), global::POGOProtos.Inventory.InventoryUpgrade.Parser, new[]{ "ItemId", "UpgradeType", "AdditionalStorage" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.InventoryUpgrades), global::POGOProtos.Inventory.InventoryUpgrades.Parser, new[]{ "InventoryUpgrades_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.Item), global::POGOProtos.Inventory.Item.Parser, new[]{ "ItemId", "Count", "Unseen" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.ItemAward), global::POGOProtos.Inventory.ItemAward.Parser, new[]{ "ItemId", "ItemCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Inventory.PokemonFamily), global::POGOProtos.Inventory.PokemonFamily.Parser, new[]{ "FamilyId", "Candy" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EggIncubatorType {
    [pbr::OriginalName("INCUBATOR_UNSET")] IncubatorUnset = 0,
    [pbr::OriginalName("INCUBATOR_DISTANCE")] IncubatorDistance = 1,
  }

  public enum InventoryUpgradeType {
    [pbr::OriginalName("UPGRADE_UNSET")] UpgradeUnset = 0,
    [pbr::OriginalName("INCREASE_ITEM_STORAGE")] IncreaseItemStorage = 1,
    [pbr::OriginalName("INCREASE_POKEMON_STORAGE")] IncreasePokemonStorage = 2,
  }

  public enum ItemId {
    [pbr::OriginalName("ITEM_UNKNOWN")] ItemUnknown = 0,
    [pbr::OriginalName("ITEM_POKE_BALL")] ItemPokeBall = 1,
    [pbr::OriginalName("ITEM_GREAT_BALL")] ItemGreatBall = 2,
    [pbr::OriginalName("ITEM_ULTRA_BALL")] ItemUltraBall = 3,
    [pbr::OriginalName("ITEM_MASTER_BALL")] ItemMasterBall = 4,
    [pbr::OriginalName("ITEM_POTION")] ItemPotion = 101,
    [pbr::OriginalName("ITEM_SUPER_POTION")] ItemSuperPotion = 102,
    [pbr::OriginalName("ITEM_HYPER_POTION")] ItemHyperPotion = 103,
    [pbr::OriginalName("ITEM_MAX_POTION")] ItemMaxPotion = 104,
    [pbr::OriginalName("ITEM_REVIVE")] ItemRevive = 201,
    [pbr::OriginalName("ITEM_MAX_REVIVE")] ItemMaxRevive = 202,
    [pbr::OriginalName("ITEM_LUCKY_EGG")] ItemLuckyEgg = 301,
    [pbr::OriginalName("ITEM_INCENSE_ORDINARY")] ItemIncenseOrdinary = 401,
    [pbr::OriginalName("ITEM_INCENSE_SPICY")] ItemIncenseSpicy = 402,
    [pbr::OriginalName("ITEM_INCENSE_COOL")] ItemIncenseCool = 403,
    [pbr::OriginalName("ITEM_INCENSE_FLORAL")] ItemIncenseFloral = 404,
    [pbr::OriginalName("ITEM_TROY_DISK")] ItemTroyDisk = 501,
    [pbr::OriginalName("ITEM_X_ATTACK")] ItemXAttack = 602,
    [pbr::OriginalName("ITEM_X_DEFENSE")] ItemXDefense = 603,
    [pbr::OriginalName("ITEM_X_MIRACLE")] ItemXMiracle = 604,
    [pbr::OriginalName("ITEM_RAZZ_BERRY")] ItemRazzBerry = 701,
    [pbr::OriginalName("ITEM_BLUK_BERRY")] ItemBlukBerry = 702,
    [pbr::OriginalName("ITEM_NANAB_BERRY")] ItemNanabBerry = 703,
    [pbr::OriginalName("ITEM_WEPAR_BERRY")] ItemWeparBerry = 704,
    [pbr::OriginalName("ITEM_PINAP_BERRY")] ItemPinapBerry = 705,
    [pbr::OriginalName("ITEM_SPECIAL_CAMERA")] ItemSpecialCamera = 801,
    [pbr::OriginalName("ITEM_INCUBATOR_BASIC_UNLIMITED")] ItemIncubatorBasicUnlimited = 901,
    [pbr::OriginalName("ITEM_INCUBATOR_BASIC")] ItemIncubatorBasic = 902,
    [pbr::OriginalName("ITEM_POKEMON_STORAGE_UPGRADE")] ItemPokemonStorageUpgrade = 1001,
    [pbr::OriginalName("ITEM_ITEM_STORAGE_UPGRADE")] ItemItemStorageUpgrade = 1002,
  }

  public enum ItemType {
    [pbr::OriginalName("ITEM_TYPE_NONE")] None = 0,
    [pbr::OriginalName("ITEM_TYPE_POKEBALL")] Pokeball = 1,
    [pbr::OriginalName("ITEM_TYPE_POTION")] Potion = 2,
    [pbr::OriginalName("ITEM_TYPE_REVIVE")] Revive = 3,
    [pbr::OriginalName("ITEM_TYPE_MAP")] Map = 4,
    [pbr::OriginalName("ITEM_TYPE_BATTLE")] Battle = 5,
    [pbr::OriginalName("ITEM_TYPE_FOOD")] Food = 6,
    [pbr::OriginalName("ITEM_TYPE_CAMERA")] Camera = 7,
    [pbr::OriginalName("ITEM_TYPE_DISK")] Disk = 8,
    [pbr::OriginalName("ITEM_TYPE_INCUBATOR")] Incubator = 9,
    [pbr::OriginalName("ITEM_TYPE_INCENSE")] Incense = 10,
    [pbr::OriginalName("ITEM_TYPE_XP_BOOST")] XpBoost = 11,
    [pbr::OriginalName("ITEM_TYPE_INVENTORY_UPGRADE")] InventoryUpgrade = 12,
  }

  #endregion

  #region Messages
  public sealed partial class AppliedItem : pb::IMessage<AppliedItem> {
    private static readonly pb::MessageParser<AppliedItem> _parser = new pb::MessageParser<AppliedItem>(() => new AppliedItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppliedItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppliedItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppliedItem(AppliedItem other) : this() {
      itemId_ = other.itemId_;
      itemType_ = other.itemType_;
      expireMs_ = other.expireMs_;
      appliedMs_ = other.appliedMs_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppliedItem Clone() {
      return new AppliedItem(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private global::POGOProtos.Inventory.ItemId itemId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.ItemId ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "item_type" field.</summary>
    public const int ItemTypeFieldNumber = 2;
    private global::POGOProtos.Inventory.ItemType itemType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.ItemType ItemType {
      get { return itemType_; }
      set {
        itemType_ = value;
      }
    }

    /// <summary>Field number for the "expire_ms" field.</summary>
    public const int ExpireMsFieldNumber = 3;
    private long expireMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpireMs {
      get { return expireMs_; }
      set {
        expireMs_ = value;
      }
    }

    /// <summary>Field number for the "applied_ms" field.</summary>
    public const int AppliedMsFieldNumber = 4;
    private long appliedMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AppliedMs {
      get { return appliedMs_; }
      set {
        appliedMs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppliedItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppliedItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (ItemType != other.ItemType) return false;
      if (ExpireMs != other.ExpireMs) return false;
      if (AppliedMs != other.AppliedMs) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (ItemType != 0) hash ^= ItemType.GetHashCode();
      if (ExpireMs != 0L) hash ^= ExpireMs.GetHashCode();
      if (AppliedMs != 0L) hash ^= AppliedMs.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ItemId);
      }
      if (ItemType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ItemType);
      }
      if (ExpireMs != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ExpireMs);
      }
      if (AppliedMs != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(AppliedMs);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemId);
      }
      if (ItemType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemType);
      }
      if (ExpireMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpireMs);
      }
      if (AppliedMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AppliedMs);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppliedItem other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.ItemType != 0) {
        ItemType = other.ItemType;
      }
      if (other.ExpireMs != 0L) {
        ExpireMs = other.ExpireMs;
      }
      if (other.AppliedMs != 0L) {
        AppliedMs = other.AppliedMs;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            itemId_ = (global::POGOProtos.Inventory.ItemId) input.ReadEnum();
            break;
          }
          case 16: {
            itemType_ = (global::POGOProtos.Inventory.ItemType) input.ReadEnum();
            break;
          }
          case 24: {
            ExpireMs = input.ReadInt64();
            break;
          }
          case 32: {
            AppliedMs = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppliedItems : pb::IMessage<AppliedItems> {
    private static readonly pb::MessageParser<AppliedItems> _parser = new pb::MessageParser<AppliedItems>(() => new AppliedItems());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppliedItems> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppliedItems() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppliedItems(AppliedItems other) : this() {
      item_ = other.item_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppliedItems Clone() {
      return new AppliedItems(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 4;
    private static readonly pb::FieldCodec<global::POGOProtos.Inventory.AppliedItem> _repeated_item_codec
        = pb::FieldCodec.ForMessage(34, global::POGOProtos.Inventory.AppliedItem.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Inventory.AppliedItem> item_ = new pbc::RepeatedField<global::POGOProtos.Inventory.AppliedItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Inventory.AppliedItem> Item {
      get { return item_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppliedItems);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppliedItems other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!item_.Equals(other.item_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= item_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      item_.WriteTo(output, _repeated_item_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += item_.CalculateSize(_repeated_item_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppliedItems other) {
      if (other == null) {
        return;
      }
      item_.Add(other.item_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 34: {
            item_.AddEntriesFrom(input, _repeated_item_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EggIncubator : pb::IMessage<EggIncubator> {
    private static readonly pb::MessageParser<EggIncubator> _parser = new pb::MessageParser<EggIncubator>(() => new EggIncubator());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EggIncubator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggIncubator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggIncubator(EggIncubator other) : this() {
      id_ = other.id_;
      itemId_ = other.itemId_;
      incubatorType_ = other.incubatorType_;
      usesRemaining_ = other.usesRemaining_;
      pokemonId_ = other.pokemonId_;
      startKmWalked_ = other.startKmWalked_;
      targetKmWalked_ = other.targetKmWalked_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggIncubator Clone() {
      return new EggIncubator(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 2;
    private global::POGOProtos.Inventory.ItemId itemId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.ItemId ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "incubator_type" field.</summary>
    public const int IncubatorTypeFieldNumber = 3;
    private global::POGOProtos.Inventory.EggIncubatorType incubatorType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.EggIncubatorType IncubatorType {
      get { return incubatorType_; }
      set {
        incubatorType_ = value;
      }
    }

    /// <summary>Field number for the "uses_remaining" field.</summary>
    public const int UsesRemainingFieldNumber = 4;
    private int usesRemaining_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UsesRemaining {
      get { return usesRemaining_; }
      set {
        usesRemaining_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_id" field.</summary>
    public const int PokemonIdFieldNumber = 5;
    private ulong pokemonId_;
    /// <summary>
    ///  TODO: Check if is PokemonType
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong PokemonId {
      get { return pokemonId_; }
      set {
        pokemonId_ = value;
      }
    }

    /// <summary>Field number for the "start_km_walked" field.</summary>
    public const int StartKmWalkedFieldNumber = 6;
    private double startKmWalked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double StartKmWalked {
      get { return startKmWalked_; }
      set {
        startKmWalked_ = value;
      }
    }

    /// <summary>Field number for the "target_km_walked" field.</summary>
    public const int TargetKmWalkedFieldNumber = 7;
    private double targetKmWalked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TargetKmWalked {
      get { return targetKmWalked_; }
      set {
        targetKmWalked_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EggIncubator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EggIncubator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ItemId != other.ItemId) return false;
      if (IncubatorType != other.IncubatorType) return false;
      if (UsesRemaining != other.UsesRemaining) return false;
      if (PokemonId != other.PokemonId) return false;
      if (StartKmWalked != other.StartKmWalked) return false;
      if (TargetKmWalked != other.TargetKmWalked) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (IncubatorType != 0) hash ^= IncubatorType.GetHashCode();
      if (UsesRemaining != 0) hash ^= UsesRemaining.GetHashCode();
      if (PokemonId != 0UL) hash ^= PokemonId.GetHashCode();
      if (StartKmWalked != 0D) hash ^= StartKmWalked.GetHashCode();
      if (TargetKmWalked != 0D) hash ^= TargetKmWalked.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ItemId != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ItemId);
      }
      if (IncubatorType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) IncubatorType);
      }
      if (UsesRemaining != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(UsesRemaining);
      }
      if (PokemonId != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(PokemonId);
      }
      if (StartKmWalked != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(StartKmWalked);
      }
      if (TargetKmWalked != 0D) {
        output.WriteRawTag(57);
        output.WriteDouble(TargetKmWalked);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemId);
      }
      if (IncubatorType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IncubatorType);
      }
      if (UsesRemaining != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UsesRemaining);
      }
      if (PokemonId != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(PokemonId);
      }
      if (StartKmWalked != 0D) {
        size += 1 + 8;
      }
      if (TargetKmWalked != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EggIncubator other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.IncubatorType != 0) {
        IncubatorType = other.IncubatorType;
      }
      if (other.UsesRemaining != 0) {
        UsesRemaining = other.UsesRemaining;
      }
      if (other.PokemonId != 0UL) {
        PokemonId = other.PokemonId;
      }
      if (other.StartKmWalked != 0D) {
        StartKmWalked = other.StartKmWalked;
      }
      if (other.TargetKmWalked != 0D) {
        TargetKmWalked = other.TargetKmWalked;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            itemId_ = (global::POGOProtos.Inventory.ItemId) input.ReadEnum();
            break;
          }
          case 24: {
            incubatorType_ = (global::POGOProtos.Inventory.EggIncubatorType) input.ReadEnum();
            break;
          }
          case 32: {
            UsesRemaining = input.ReadInt32();
            break;
          }
          case 40: {
            PokemonId = input.ReadUInt64();
            break;
          }
          case 49: {
            StartKmWalked = input.ReadDouble();
            break;
          }
          case 57: {
            TargetKmWalked = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EggIncubators : pb::IMessage<EggIncubators> {
    private static readonly pb::MessageParser<EggIncubators> _parser = new pb::MessageParser<EggIncubators>(() => new EggIncubators());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EggIncubators> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggIncubators() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggIncubators(EggIncubators other) : this() {
      eggIncubator_ = other.eggIncubator_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EggIncubators Clone() {
      return new EggIncubators(this);
    }

    /// <summary>Field number for the "egg_incubator" field.</summary>
    public const int EggIncubatorFieldNumber = 1;
    private static readonly pb::FieldCodec<global::POGOProtos.Inventory.EggIncubator> _repeated_eggIncubator_codec
        = pb::FieldCodec.ForMessage(10, global::POGOProtos.Inventory.EggIncubator.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Inventory.EggIncubator> eggIncubator_ = new pbc::RepeatedField<global::POGOProtos.Inventory.EggIncubator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Inventory.EggIncubator> EggIncubator {
      get { return eggIncubator_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EggIncubators);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EggIncubators other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!eggIncubator_.Equals(other.eggIncubator_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= eggIncubator_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      eggIncubator_.WriteTo(output, _repeated_eggIncubator_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += eggIncubator_.CalculateSize(_repeated_eggIncubator_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EggIncubators other) {
      if (other == null) {
        return;
      }
      eggIncubator_.Add(other.eggIncubator_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            eggIncubator_.AddEntriesFrom(input, _repeated_eggIncubator_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InventoryDelta : pb::IMessage<InventoryDelta> {
    private static readonly pb::MessageParser<InventoryDelta> _parser = new pb::MessageParser<InventoryDelta>(() => new InventoryDelta());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryDelta(InventoryDelta other) : this() {
      originalTimestampMs_ = other.originalTimestampMs_;
      newTimestampMs_ = other.newTimestampMs_;
      inventoryItems_ = other.inventoryItems_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryDelta Clone() {
      return new InventoryDelta(this);
    }

    /// <summary>Field number for the "original_timestamp_ms" field.</summary>
    public const int OriginalTimestampMsFieldNumber = 1;
    private long originalTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long OriginalTimestampMs {
      get { return originalTimestampMs_; }
      set {
        originalTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "new_timestamp_ms" field.</summary>
    public const int NewTimestampMsFieldNumber = 2;
    private long newTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NewTimestampMs {
      get { return newTimestampMs_; }
      set {
        newTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "inventory_items" field.</summary>
    public const int InventoryItemsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::POGOProtos.Inventory.InventoryItem> _repeated_inventoryItems_codec
        = pb::FieldCodec.ForMessage(26, global::POGOProtos.Inventory.InventoryItem.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Inventory.InventoryItem> inventoryItems_ = new pbc::RepeatedField<global::POGOProtos.Inventory.InventoryItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Inventory.InventoryItem> InventoryItems {
      get { return inventoryItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OriginalTimestampMs != other.OriginalTimestampMs) return false;
      if (NewTimestampMs != other.NewTimestampMs) return false;
      if(!inventoryItems_.Equals(other.inventoryItems_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OriginalTimestampMs != 0L) hash ^= OriginalTimestampMs.GetHashCode();
      if (NewTimestampMs != 0L) hash ^= NewTimestampMs.GetHashCode();
      hash ^= inventoryItems_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OriginalTimestampMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(OriginalTimestampMs);
      }
      if (NewTimestampMs != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NewTimestampMs);
      }
      inventoryItems_.WriteTo(output, _repeated_inventoryItems_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OriginalTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OriginalTimestampMs);
      }
      if (NewTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NewTimestampMs);
      }
      size += inventoryItems_.CalculateSize(_repeated_inventoryItems_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryDelta other) {
      if (other == null) {
        return;
      }
      if (other.OriginalTimestampMs != 0L) {
        OriginalTimestampMs = other.OriginalTimestampMs;
      }
      if (other.NewTimestampMs != 0L) {
        NewTimestampMs = other.NewTimestampMs;
      }
      inventoryItems_.Add(other.inventoryItems_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            OriginalTimestampMs = input.ReadInt64();
            break;
          }
          case 16: {
            NewTimestampMs = input.ReadInt64();
            break;
          }
          case 26: {
            inventoryItems_.AddEntriesFrom(input, _repeated_inventoryItems_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InventoryItem : pb::IMessage<InventoryItem> {
    private static readonly pb::MessageParser<InventoryItem> _parser = new pb::MessageParser<InventoryItem>(() => new InventoryItem());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItem(InventoryItem other) : this() {
      modifiedTimestampMs_ = other.modifiedTimestampMs_;
      deletedItemKey_ = other.deletedItemKey_;
      InventoryItemData = other.inventoryItemData_ != null ? other.InventoryItemData.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItem Clone() {
      return new InventoryItem(this);
    }

    /// <summary>Field number for the "modified_timestamp_ms" field.</summary>
    public const int ModifiedTimestampMsFieldNumber = 1;
    private long modifiedTimestampMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ModifiedTimestampMs {
      get { return modifiedTimestampMs_; }
      set {
        modifiedTimestampMs_ = value;
      }
    }

    /// <summary>Field number for the "deleted_item_key" field.</summary>
    public const int DeletedItemKeyFieldNumber = 2;
    private long deletedItemKey_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DeletedItemKey {
      get { return deletedItemKey_; }
      set {
        deletedItemKey_ = value;
      }
    }

    /// <summary>Field number for the "inventory_item_data" field.</summary>
    public const int InventoryItemDataFieldNumber = 3;
    private global::POGOProtos.Inventory.InventoryItemData inventoryItemData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.InventoryItemData InventoryItemData {
      get { return inventoryItemData_; }
      set {
        inventoryItemData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModifiedTimestampMs != other.ModifiedTimestampMs) return false;
      if (DeletedItemKey != other.DeletedItemKey) return false;
      if (!object.Equals(InventoryItemData, other.InventoryItemData)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ModifiedTimestampMs != 0L) hash ^= ModifiedTimestampMs.GetHashCode();
      if (DeletedItemKey != 0L) hash ^= DeletedItemKey.GetHashCode();
      if (inventoryItemData_ != null) hash ^= InventoryItemData.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ModifiedTimestampMs != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ModifiedTimestampMs);
      }
      if (DeletedItemKey != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DeletedItemKey);
      }
      if (inventoryItemData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(InventoryItemData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ModifiedTimestampMs != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ModifiedTimestampMs);
      }
      if (DeletedItemKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DeletedItemKey);
      }
      if (inventoryItemData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InventoryItemData);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryItem other) {
      if (other == null) {
        return;
      }
      if (other.ModifiedTimestampMs != 0L) {
        ModifiedTimestampMs = other.ModifiedTimestampMs;
      }
      if (other.DeletedItemKey != 0L) {
        DeletedItemKey = other.DeletedItemKey;
      }
      if (other.inventoryItemData_ != null) {
        if (inventoryItemData_ == null) {
          inventoryItemData_ = new global::POGOProtos.Inventory.InventoryItemData();
        }
        InventoryItemData.MergeFrom(other.InventoryItemData);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ModifiedTimestampMs = input.ReadInt64();
            break;
          }
          case 16: {
            DeletedItemKey = input.ReadInt64();
            break;
          }
          case 26: {
            if (inventoryItemData_ == null) {
              inventoryItemData_ = new global::POGOProtos.Inventory.InventoryItemData();
            }
            input.ReadMessage(inventoryItemData_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InventoryItemData : pb::IMessage<InventoryItemData> {
    private static readonly pb::MessageParser<InventoryItemData> _parser = new pb::MessageParser<InventoryItemData>(() => new InventoryItemData());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryItemData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItemData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItemData(InventoryItemData other) : this() {
      PokemonData = other.pokemonData_ != null ? other.PokemonData.Clone() : null;
      Item = other.item_ != null ? other.Item.Clone() : null;
      PokedexEntry = other.pokedexEntry_ != null ? other.PokedexEntry.Clone() : null;
      PlayerStats = other.playerStats_ != null ? other.PlayerStats.Clone() : null;
      PlayerCurrency = other.playerCurrency_ != null ? other.PlayerCurrency.Clone() : null;
      PlayerCamera = other.playerCamera_ != null ? other.PlayerCamera.Clone() : null;
      InventoryUpgrades = other.inventoryUpgrades_ != null ? other.InventoryUpgrades.Clone() : null;
      AppliedItems = other.appliedItems_ != null ? other.AppliedItems.Clone() : null;
      EggIncubators = other.eggIncubators_ != null ? other.EggIncubators.Clone() : null;
      PokemonFamily = other.pokemonFamily_ != null ? other.PokemonFamily.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryItemData Clone() {
      return new InventoryItemData(this);
    }

    /// <summary>Field number for the "pokemon_data" field.</summary>
    public const int PokemonDataFieldNumber = 1;
    private global::POGOProtos.Data.PokemonData pokemonData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokemonData PokemonData {
      get { return pokemonData_; }
      set {
        pokemonData_ = value;
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 2;
    private global::POGOProtos.Inventory.Item item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.Item Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "pokedex_entry" field.</summary>
    public const int PokedexEntryFieldNumber = 3;
    private global::POGOProtos.Data.PokedexEntry pokedexEntry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.PokedexEntry PokedexEntry {
      get { return pokedexEntry_; }
      set {
        pokedexEntry_ = value;
      }
    }

    /// <summary>Field number for the "player_stats" field.</summary>
    public const int PlayerStatsFieldNumber = 4;
    private global::POGOProtos.Data.Player.PlayerStats playerStats_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Player.PlayerStats PlayerStats {
      get { return playerStats_; }
      set {
        playerStats_ = value;
      }
    }

    /// <summary>Field number for the "player_currency" field.</summary>
    public const int PlayerCurrencyFieldNumber = 5;
    private global::POGOProtos.Data.Player.PlayerCurrency playerCurrency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Player.PlayerCurrency PlayerCurrency {
      get { return playerCurrency_; }
      set {
        playerCurrency_ = value;
      }
    }

    /// <summary>Field number for the "player_camera" field.</summary>
    public const int PlayerCameraFieldNumber = 6;
    private global::POGOProtos.Data.Player.PlayerCamera playerCamera_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Data.Player.PlayerCamera PlayerCamera {
      get { return playerCamera_; }
      set {
        playerCamera_ = value;
      }
    }

    /// <summary>Field number for the "inventory_upgrades" field.</summary>
    public const int InventoryUpgradesFieldNumber = 7;
    private global::POGOProtos.Inventory.InventoryUpgrades inventoryUpgrades_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.InventoryUpgrades InventoryUpgrades {
      get { return inventoryUpgrades_; }
      set {
        inventoryUpgrades_ = value;
      }
    }

    /// <summary>Field number for the "applied_items" field.</summary>
    public const int AppliedItemsFieldNumber = 8;
    private global::POGOProtos.Inventory.AppliedItems appliedItems_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.AppliedItems AppliedItems {
      get { return appliedItems_; }
      set {
        appliedItems_ = value;
      }
    }

    /// <summary>Field number for the "egg_incubators" field.</summary>
    public const int EggIncubatorsFieldNumber = 9;
    private global::POGOProtos.Inventory.EggIncubators eggIncubators_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.EggIncubators EggIncubators {
      get { return eggIncubators_; }
      set {
        eggIncubators_ = value;
      }
    }

    /// <summary>Field number for the "pokemon_family" field.</summary>
    public const int PokemonFamilyFieldNumber = 10;
    private global::POGOProtos.Inventory.PokemonFamily pokemonFamily_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.PokemonFamily PokemonFamily {
      get { return pokemonFamily_; }
      set {
        pokemonFamily_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryItemData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryItemData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PokemonData, other.PokemonData)) return false;
      if (!object.Equals(Item, other.Item)) return false;
      if (!object.Equals(PokedexEntry, other.PokedexEntry)) return false;
      if (!object.Equals(PlayerStats, other.PlayerStats)) return false;
      if (!object.Equals(PlayerCurrency, other.PlayerCurrency)) return false;
      if (!object.Equals(PlayerCamera, other.PlayerCamera)) return false;
      if (!object.Equals(InventoryUpgrades, other.InventoryUpgrades)) return false;
      if (!object.Equals(AppliedItems, other.AppliedItems)) return false;
      if (!object.Equals(EggIncubators, other.EggIncubators)) return false;
      if (!object.Equals(PokemonFamily, other.PokemonFamily)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pokemonData_ != null) hash ^= PokemonData.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (pokedexEntry_ != null) hash ^= PokedexEntry.GetHashCode();
      if (playerStats_ != null) hash ^= PlayerStats.GetHashCode();
      if (playerCurrency_ != null) hash ^= PlayerCurrency.GetHashCode();
      if (playerCamera_ != null) hash ^= PlayerCamera.GetHashCode();
      if (inventoryUpgrades_ != null) hash ^= InventoryUpgrades.GetHashCode();
      if (appliedItems_ != null) hash ^= AppliedItems.GetHashCode();
      if (eggIncubators_ != null) hash ^= EggIncubators.GetHashCode();
      if (pokemonFamily_ != null) hash ^= PokemonFamily.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pokemonData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PokemonData);
      }
      if (item_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Item);
      }
      if (pokedexEntry_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PokedexEntry);
      }
      if (playerStats_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PlayerStats);
      }
      if (playerCurrency_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlayerCurrency);
      }
      if (playerCamera_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PlayerCamera);
      }
      if (inventoryUpgrades_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(InventoryUpgrades);
      }
      if (appliedItems_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(AppliedItems);
      }
      if (eggIncubators_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(EggIncubators);
      }
      if (pokemonFamily_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PokemonFamily);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pokemonData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonData);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (pokedexEntry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokedexEntry);
      }
      if (playerStats_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerStats);
      }
      if (playerCurrency_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerCurrency);
      }
      if (playerCamera_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerCamera);
      }
      if (inventoryUpgrades_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(InventoryUpgrades);
      }
      if (appliedItems_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppliedItems);
      }
      if (eggIncubators_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EggIncubators);
      }
      if (pokemonFamily_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PokemonFamily);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryItemData other) {
      if (other == null) {
        return;
      }
      if (other.pokemonData_ != null) {
        if (pokemonData_ == null) {
          pokemonData_ = new global::POGOProtos.Data.PokemonData();
        }
        PokemonData.MergeFrom(other.PokemonData);
      }
      if (other.item_ != null) {
        if (item_ == null) {
          item_ = new global::POGOProtos.Inventory.Item();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.pokedexEntry_ != null) {
        if (pokedexEntry_ == null) {
          pokedexEntry_ = new global::POGOProtos.Data.PokedexEntry();
        }
        PokedexEntry.MergeFrom(other.PokedexEntry);
      }
      if (other.playerStats_ != null) {
        if (playerStats_ == null) {
          playerStats_ = new global::POGOProtos.Data.Player.PlayerStats();
        }
        PlayerStats.MergeFrom(other.PlayerStats);
      }
      if (other.playerCurrency_ != null) {
        if (playerCurrency_ == null) {
          playerCurrency_ = new global::POGOProtos.Data.Player.PlayerCurrency();
        }
        PlayerCurrency.MergeFrom(other.PlayerCurrency);
      }
      if (other.playerCamera_ != null) {
        if (playerCamera_ == null) {
          playerCamera_ = new global::POGOProtos.Data.Player.PlayerCamera();
        }
        PlayerCamera.MergeFrom(other.PlayerCamera);
      }
      if (other.inventoryUpgrades_ != null) {
        if (inventoryUpgrades_ == null) {
          inventoryUpgrades_ = new global::POGOProtos.Inventory.InventoryUpgrades();
        }
        InventoryUpgrades.MergeFrom(other.InventoryUpgrades);
      }
      if (other.appliedItems_ != null) {
        if (appliedItems_ == null) {
          appliedItems_ = new global::POGOProtos.Inventory.AppliedItems();
        }
        AppliedItems.MergeFrom(other.AppliedItems);
      }
      if (other.eggIncubators_ != null) {
        if (eggIncubators_ == null) {
          eggIncubators_ = new global::POGOProtos.Inventory.EggIncubators();
        }
        EggIncubators.MergeFrom(other.EggIncubators);
      }
      if (other.pokemonFamily_ != null) {
        if (pokemonFamily_ == null) {
          pokemonFamily_ = new global::POGOProtos.Inventory.PokemonFamily();
        }
        PokemonFamily.MergeFrom(other.PokemonFamily);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (pokemonData_ == null) {
              pokemonData_ = new global::POGOProtos.Data.PokemonData();
            }
            input.ReadMessage(pokemonData_);
            break;
          }
          case 18: {
            if (item_ == null) {
              item_ = new global::POGOProtos.Inventory.Item();
            }
            input.ReadMessage(item_);
            break;
          }
          case 26: {
            if (pokedexEntry_ == null) {
              pokedexEntry_ = new global::POGOProtos.Data.PokedexEntry();
            }
            input.ReadMessage(pokedexEntry_);
            break;
          }
          case 34: {
            if (playerStats_ == null) {
              playerStats_ = new global::POGOProtos.Data.Player.PlayerStats();
            }
            input.ReadMessage(playerStats_);
            break;
          }
          case 42: {
            if (playerCurrency_ == null) {
              playerCurrency_ = new global::POGOProtos.Data.Player.PlayerCurrency();
            }
            input.ReadMessage(playerCurrency_);
            break;
          }
          case 50: {
            if (playerCamera_ == null) {
              playerCamera_ = new global::POGOProtos.Data.Player.PlayerCamera();
            }
            input.ReadMessage(playerCamera_);
            break;
          }
          case 58: {
            if (inventoryUpgrades_ == null) {
              inventoryUpgrades_ = new global::POGOProtos.Inventory.InventoryUpgrades();
            }
            input.ReadMessage(inventoryUpgrades_);
            break;
          }
          case 66: {
            if (appliedItems_ == null) {
              appliedItems_ = new global::POGOProtos.Inventory.AppliedItems();
            }
            input.ReadMessage(appliedItems_);
            break;
          }
          case 74: {
            if (eggIncubators_ == null) {
              eggIncubators_ = new global::POGOProtos.Inventory.EggIncubators();
            }
            input.ReadMessage(eggIncubators_);
            break;
          }
          case 82: {
            if (pokemonFamily_ == null) {
              pokemonFamily_ = new global::POGOProtos.Inventory.PokemonFamily();
            }
            input.ReadMessage(pokemonFamily_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InventoryUpgrade : pb::IMessage<InventoryUpgrade> {
    private static readonly pb::MessageParser<InventoryUpgrade> _parser = new pb::MessageParser<InventoryUpgrade>(() => new InventoryUpgrade());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryUpgrade> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryUpgrade() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryUpgrade(InventoryUpgrade other) : this() {
      itemId_ = other.itemId_;
      upgradeType_ = other.upgradeType_;
      additionalStorage_ = other.additionalStorage_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryUpgrade Clone() {
      return new InventoryUpgrade(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private global::POGOProtos.Inventory.ItemId itemId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.ItemId ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "upgrade_type" field.</summary>
    public const int UpgradeTypeFieldNumber = 2;
    private global::POGOProtos.Inventory.InventoryUpgradeType upgradeType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.InventoryUpgradeType UpgradeType {
      get { return upgradeType_; }
      set {
        upgradeType_ = value;
      }
    }

    /// <summary>Field number for the "additional_storage" field.</summary>
    public const int AdditionalStorageFieldNumber = 3;
    private int additionalStorage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AdditionalStorage {
      get { return additionalStorage_; }
      set {
        additionalStorage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryUpgrade);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryUpgrade other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (UpgradeType != other.UpgradeType) return false;
      if (AdditionalStorage != other.AdditionalStorage) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (UpgradeType != 0) hash ^= UpgradeType.GetHashCode();
      if (AdditionalStorage != 0) hash ^= AdditionalStorage.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ItemId);
      }
      if (UpgradeType != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) UpgradeType);
      }
      if (AdditionalStorage != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AdditionalStorage);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemId);
      }
      if (UpgradeType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) UpgradeType);
      }
      if (AdditionalStorage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AdditionalStorage);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryUpgrade other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.UpgradeType != 0) {
        UpgradeType = other.UpgradeType;
      }
      if (other.AdditionalStorage != 0) {
        AdditionalStorage = other.AdditionalStorage;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            itemId_ = (global::POGOProtos.Inventory.ItemId) input.ReadEnum();
            break;
          }
          case 16: {
            upgradeType_ = (global::POGOProtos.Inventory.InventoryUpgradeType) input.ReadEnum();
            break;
          }
          case 24: {
            AdditionalStorage = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InventoryUpgrades : pb::IMessage<InventoryUpgrades> {
    private static readonly pb::MessageParser<InventoryUpgrades> _parser = new pb::MessageParser<InventoryUpgrades>(() => new InventoryUpgrades());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InventoryUpgrades> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryUpgrades() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryUpgrades(InventoryUpgrades other) : this() {
      inventoryUpgrades_ = other.inventoryUpgrades_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InventoryUpgrades Clone() {
      return new InventoryUpgrades(this);
    }

    /// <summary>Field number for the "inventory_upgrades" field.</summary>
    public const int InventoryUpgrades_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::POGOProtos.Inventory.InventoryUpgrade> _repeated_inventoryUpgrades_codec
        = pb::FieldCodec.ForMessage(10, global::POGOProtos.Inventory.InventoryUpgrade.Parser);
    private readonly pbc::RepeatedField<global::POGOProtos.Inventory.InventoryUpgrade> inventoryUpgrades_ = new pbc::RepeatedField<global::POGOProtos.Inventory.InventoryUpgrade>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::POGOProtos.Inventory.InventoryUpgrade> InventoryUpgrades_ {
      get { return inventoryUpgrades_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InventoryUpgrades);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InventoryUpgrades other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!inventoryUpgrades_.Equals(other.inventoryUpgrades_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= inventoryUpgrades_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      inventoryUpgrades_.WriteTo(output, _repeated_inventoryUpgrades_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += inventoryUpgrades_.CalculateSize(_repeated_inventoryUpgrades_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InventoryUpgrades other) {
      if (other == null) {
        return;
      }
      inventoryUpgrades_.Add(other.inventoryUpgrades_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            inventoryUpgrades_.AddEntriesFrom(input, _repeated_inventoryUpgrades_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Item : pb::IMessage<Item> {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      itemId_ = other.itemId_;
      count_ = other.count_;
      unseen_ = other.unseen_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private global::POGOProtos.Inventory.ItemId itemId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.ItemId ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "unseen" field.</summary>
    public const int UnseenFieldNumber = 3;
    private bool unseen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Unseen {
      get { return unseen_; }
      set {
        unseen_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Count != other.Count) return false;
      if (Unseen != other.Unseen) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (Unseen != false) hash ^= Unseen.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ItemId);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (Unseen != false) {
        output.WriteRawTag(24);
        output.WriteBool(Unseen);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemId);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (Unseen != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.Unseen != false) {
        Unseen = other.Unseen;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            itemId_ = (global::POGOProtos.Inventory.ItemId) input.ReadEnum();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 24: {
            Unseen = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemAward : pb::IMessage<ItemAward> {
    private static readonly pb::MessageParser<ItemAward> _parser = new pb::MessageParser<ItemAward>(() => new ItemAward());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemAward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemAward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemAward(ItemAward other) : this() {
      itemId_ = other.itemId_;
      itemCount_ = other.itemCount_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemAward Clone() {
      return new ItemAward(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private global::POGOProtos.Inventory.ItemId itemId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Inventory.ItemId ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "item_count" field.</summary>
    public const int ItemCountFieldNumber = 2;
    private int itemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ItemCount {
      get { return itemCount_; }
      set {
        itemCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemAward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemAward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (ItemCount != other.ItemCount) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0) hash ^= ItemId.GetHashCode();
      if (ItemCount != 0) hash ^= ItemCount.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ItemId != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ItemId);
      }
      if (ItemCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ItemCount);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ItemId);
      }
      if (ItemCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ItemCount);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemAward other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0) {
        ItemId = other.ItemId;
      }
      if (other.ItemCount != 0) {
        ItemCount = other.ItemCount;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            itemId_ = (global::POGOProtos.Inventory.ItemId) input.ReadEnum();
            break;
          }
          case 16: {
            ItemCount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PokemonFamily : pb::IMessage<PokemonFamily> {
    private static readonly pb::MessageParser<PokemonFamily> _parser = new pb::MessageParser<PokemonFamily>(() => new PokemonFamily());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PokemonFamily> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.Inventory.POGOProtosInventoryReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PokemonFamily() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PokemonFamily(PokemonFamily other) : this() {
      familyId_ = other.familyId_;
      candy_ = other.candy_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PokemonFamily Clone() {
      return new PokemonFamily(this);
    }

    /// <summary>Field number for the "family_id" field.</summary>
    public const int FamilyIdFieldNumber = 1;
    private global::POGOProtos.Enums.PokemonFamilyId familyId_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::POGOProtos.Enums.PokemonFamilyId FamilyId {
      get { return familyId_; }
      set {
        familyId_ = value;
      }
    }

    /// <summary>Field number for the "candy" field.</summary>
    public const int CandyFieldNumber = 2;
    private int candy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Candy {
      get { return candy_; }
      set {
        candy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PokemonFamily);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PokemonFamily other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FamilyId != other.FamilyId) return false;
      if (Candy != other.Candy) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FamilyId != 0) hash ^= FamilyId.GetHashCode();
      if (Candy != 0) hash ^= Candy.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FamilyId != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) FamilyId);
      }
      if (Candy != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Candy);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FamilyId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FamilyId);
      }
      if (Candy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Candy);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PokemonFamily other) {
      if (other == null) {
        return;
      }
      if (other.FamilyId != 0) {
        FamilyId = other.FamilyId;
      }
      if (other.Candy != 0) {
        Candy = other.Candy;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            familyId_ = (global::POGOProtos.Enums.PokemonFamilyId) input.ReadEnum();
            break;
          }
          case 16: {
            Candy = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
