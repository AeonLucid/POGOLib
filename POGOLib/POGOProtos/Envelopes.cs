// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Envelopes.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace POGOProtos {

  /// <summary>Holder for reflection information generated from Envelopes.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class EnvelopesReflection {

    #region Descriptor
    /// <summary>File descriptor for Envelopes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EnvelopesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9FbnZlbG9wZXMucHJvdG8SClBPR09Qcm90b3MaFlJlcXVlc3RzL1JlcXVl",
            "c3QucHJvdG8i1wcKCUVudmVsb3Blcxp1CghVbmtub3duNhIQCgh1bmtub3du",
            "MRgBIAEoBRI5Cgh1bmtub3duMhgCIAEoCzInLlBPR09Qcm90b3MuRW52ZWxv",
            "cGVzLlVua25vd242LlVua25vd24yGhwKCFVua25vd24yEhAKCHVua25vd24x",
            "GAEgASgMGkUKCkF1dGhUaWNrZXQSDQoFc3RhcnQYASABKAwSGwoTZXhwaXJl",
            "X3RpbWVzdGFtcF9tcxgCIAEoBBILCgNlbmQYAyABKAwa7QMKD1JlcXVlc3RF",
            "bnZlbG9wZRITCgtzdGF0dXNfY29kZRgBIAEoBRISCgpyZXF1ZXN0X2lkGAMg",
            "ASgEEi4KCHJlcXVlc3RzGAQgAygLMhwuUE9HT1Byb3Rvcy5SZXF1ZXN0cy5S",
            "ZXF1ZXN0EjAKCHVua25vd242GAYgASgLMh4uUE9HT1Byb3Rvcy5FbnZlbG9w",
            "ZXMuVW5rbm93bjYSEAoIbGF0aXR1ZGUYByABKAESEQoJbG9uZ2l0dWRlGAgg",
            "ASgBEhAKCGFsdGl0dWRlGAkgASgBEkEKCWF1dGhfaW5mbxgKIAEoCzIuLlBP",
            "R09Qcm90b3MuRW52ZWxvcGVzLlJlcXVlc3RFbnZlbG9wZS5BdXRoSW5mbxI1",
            "CgthdXRoX3RpY2tldBgLIAEoCzIgLlBPR09Qcm90b3MuRW52ZWxvcGVzLkF1",
            "dGhUaWNrZXQSEQoJdW5rbm93bjEyGAwgASgDGooBCghBdXRoSW5mbxIQCghw",
            "cm92aWRlchgBIAEoCRJBCgV0b2tlbhgCIAEoCzIyLlBPR09Qcm90b3MuRW52",
            "ZWxvcGVzLlJlcXVlc3RFbnZlbG9wZS5BdXRoSW5mby5KV1QaKQoDSldUEhAK",
            "CGNvbnRlbnRzGAEgASgJEhAKCHVua25vd24yGAIgASgFGpsCChBSZXNwb25z",
            "ZUVudmVsb3BlEhMKC3N0YXR1c19jb2RlGAEgASgFEhMKC3Jlc3BvbnNlX2lk",
            "GAIgASgEEg8KB2FwaV91cmwYAyABKAkSMAoIdW5rbm93bjYYBiABKAsyHi5Q",
            "T0dPUHJvdG9zLkVudmVsb3Blcy5Vbmtub3duNhI1CgthdXRoX3RpY2tldBgH",
            "IAEoCzIgLlBPR09Qcm90b3MuRW52ZWxvcGVzLkF1dGhUaWNrZXQSDwoHcmV0",
            "dXJucxhkIAMoDBINCgVlcnJvchhlIAEoCRpDCghVbmtub3duNxIRCgl1bmtu",
            "b3duNzEYASABKAwSEQoJdW5rbm93bjcyGAIgASgDEhEKCXVua25vd243MxgD",
            "IAEoDFAAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::POGOProtos.Requests.RequestReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Envelopes), global::POGOProtos.Envelopes.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Envelopes.Types.Unknown6), global::POGOProtos.Envelopes.Types.Unknown6.Parser, new[]{ "Unknown1", "Unknown2" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Envelopes.Types.Unknown6.Types.Unknown2), global::POGOProtos.Envelopes.Types.Unknown6.Types.Unknown2.Parser, new[]{ "Unknown1" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Envelopes.Types.AuthTicket), global::POGOProtos.Envelopes.Types.AuthTicket.Parser, new[]{ "Start", "ExpireTimestampMs", "End" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Envelopes.Types.RequestEnvelope), global::POGOProtos.Envelopes.Types.RequestEnvelope.Parser, new[]{ "StatusCode", "RequestId", "Requests", "Unknown6", "Latitude", "Longitude", "Altitude", "AuthInfo", "AuthTicket", "Unknown12" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo), global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo.Parser, new[]{ "Provider", "Token" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo.Types.JWT), global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo.Types.JWT.Parser, new[]{ "Contents", "Unknown2" }, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Envelopes.Types.ResponseEnvelope), global::POGOProtos.Envelopes.Types.ResponseEnvelope.Parser, new[]{ "StatusCode", "ResponseId", "ApiUrl", "Unknown6", "AuthTicket", "Returns", "Error" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::POGOProtos.Envelopes.Types.ResponseEnvelope.Types.Unknown7), global::POGOProtos.Envelopes.Types.ResponseEnvelope.Types.Unknown7.Parser, new[]{ "Unknown71", "Unknown72", "Unknown73" }, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Envelopes : pb::IMessage<Envelopes> {
    private static readonly pb::MessageParser<Envelopes> _parser = new pb::MessageParser<Envelopes>(() => new Envelopes());
    public static pb::MessageParser<Envelopes> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::POGOProtos.EnvelopesReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public Envelopes() {
      OnConstruction();
    }

    partial void OnConstruction();

    public Envelopes(Envelopes other) : this() {
    }

    public Envelopes Clone() {
      return new Envelopes(this);
    }

    public override bool Equals(object other) {
      return Equals(other as Envelopes);
    }

    public bool Equals(Envelopes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
    }

    public int CalculateSize() {
      int size = 0;
      return size;
    }

    public void MergeFrom(Envelopes other) {
      if (other == null) {
        return;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Envelopes message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Unknown6 : pb::IMessage<Unknown6> {
        private static readonly pb::MessageParser<Unknown6> _parser = new pb::MessageParser<Unknown6>(() => new Unknown6());
        public static pb::MessageParser<Unknown6> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Envelopes.Descriptor.NestedTypes[0]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public Unknown6() {
          OnConstruction();
        }

        partial void OnConstruction();

        public Unknown6(Unknown6 other) : this() {
          unknown1_ = other.unknown1_;
          Unknown2 = other.unknown2_ != null ? other.Unknown2.Clone() : null;
        }

        public Unknown6 Clone() {
          return new Unknown6(this);
        }

        /// <summary>Field number for the "unknown1" field.</summary>
        public const int Unknown1FieldNumber = 1;
        private int unknown1_;
        /// <summary>
        /// 6
        /// </summary>
        public int Unknown1 {
          get { return unknown1_; }
          set {
            unknown1_ = value;
          }
        }

        /// <summary>Field number for the "unknown2" field.</summary>
        public const int Unknown2FieldNumber = 2;
        private global::POGOProtos.Envelopes.Types.Unknown6.Types.Unknown2 unknown2_;
        public global::POGOProtos.Envelopes.Types.Unknown6.Types.Unknown2 Unknown2 {
          get { return unknown2_; }
          set {
            unknown2_ = value;
          }
        }

        public override bool Equals(object other) {
          return Equals(other as Unknown6);
        }

        public bool Equals(Unknown6 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Unknown1 != other.Unknown1) return false;
          if (!object.Equals(Unknown2, other.Unknown2)) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Unknown1 != 0) hash ^= Unknown1.GetHashCode();
          if (unknown2_ != null) hash ^= Unknown2.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Unknown1 != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Unknown1);
          }
          if (unknown2_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Unknown2);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Unknown1 != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown1);
          }
          if (unknown2_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unknown2);
          }
          return size;
        }

        public void MergeFrom(Unknown6 other) {
          if (other == null) {
            return;
          }
          if (other.Unknown1 != 0) {
            Unknown1 = other.Unknown1;
          }
          if (other.unknown2_ != null) {
            if (unknown2_ == null) {
              unknown2_ = new global::POGOProtos.Envelopes.Types.Unknown6.Types.Unknown2();
            }
            Unknown2.MergeFrom(other.Unknown2);
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                Unknown1 = input.ReadInt32();
                break;
              }
              case 18: {
                if (unknown2_ == null) {
                  unknown2_ = new global::POGOProtos.Envelopes.Types.Unknown6.Types.Unknown2();
                }
                input.ReadMessage(unknown2_);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Unknown6 message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class Unknown2 : pb::IMessage<Unknown2> {
            private static readonly pb::MessageParser<Unknown2> _parser = new pb::MessageParser<Unknown2>(() => new Unknown2());
            public static pb::MessageParser<Unknown2> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::POGOProtos.Envelopes.Types.Unknown6.Descriptor.NestedTypes[0]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public Unknown2() {
              OnConstruction();
            }

            partial void OnConstruction();

            public Unknown2(Unknown2 other) : this() {
              unknown1_ = other.unknown1_;
            }

            public Unknown2 Clone() {
              return new Unknown2(this);
            }

            /// <summary>Field number for the "unknown1" field.</summary>
            public const int Unknown1FieldNumber = 1;
            private pb::ByteString unknown1_ = pb::ByteString.Empty;
            public pb::ByteString Unknown1 {
              get { return unknown1_; }
              set {
                unknown1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            public override bool Equals(object other) {
              return Equals(other as Unknown2);
            }

            public bool Equals(Unknown2 other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Unknown1 != other.Unknown1) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (Unknown1.Length != 0) hash ^= Unknown1.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (Unknown1.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(Unknown1);
              }
            }

            public int CalculateSize() {
              int size = 0;
              if (Unknown1.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown1);
              }
              return size;
            }

            public void MergeFrom(Unknown2 other) {
              if (other == null) {
                return;
              }
              if (other.Unknown1.Length != 0) {
                Unknown1 = other.Unknown1;
              }
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    Unknown1 = input.ReadBytes();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class AuthTicket : pb::IMessage<AuthTicket> {
        private static readonly pb::MessageParser<AuthTicket> _parser = new pb::MessageParser<AuthTicket>(() => new AuthTicket());
        public static pb::MessageParser<AuthTicket> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Envelopes.Descriptor.NestedTypes[1]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public AuthTicket() {
          OnConstruction();
        }

        partial void OnConstruction();

        public AuthTicket(AuthTicket other) : this() {
          start_ = other.start_;
          expireTimestampMs_ = other.expireTimestampMs_;
          end_ = other.end_;
        }

        public AuthTicket Clone() {
          return new AuthTicket(this);
        }

        /// <summary>Field number for the "start" field.</summary>
        public const int StartFieldNumber = 1;
        private pb::ByteString start_ = pb::ByteString.Empty;
        public pb::ByteString Start {
          get { return start_; }
          set {
            start_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "expire_timestamp_ms" field.</summary>
        public const int ExpireTimestampMsFieldNumber = 2;
        private ulong expireTimestampMs_;
        public ulong ExpireTimestampMs {
          get { return expireTimestampMs_; }
          set {
            expireTimestampMs_ = value;
          }
        }

        /// <summary>Field number for the "end" field.</summary>
        public const int EndFieldNumber = 3;
        private pb::ByteString end_ = pb::ByteString.Empty;
        public pb::ByteString End {
          get { return end_; }
          set {
            end_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        public override bool Equals(object other) {
          return Equals(other as AuthTicket);
        }

        public bool Equals(AuthTicket other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Start != other.Start) return false;
          if (ExpireTimestampMs != other.ExpireTimestampMs) return false;
          if (End != other.End) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (Start.Length != 0) hash ^= Start.GetHashCode();
          if (ExpireTimestampMs != 0UL) hash ^= ExpireTimestampMs.GetHashCode();
          if (End.Length != 0) hash ^= End.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (Start.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Start);
          }
          if (ExpireTimestampMs != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(ExpireTimestampMs);
          }
          if (End.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(End);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (Start.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Start);
          }
          if (ExpireTimestampMs != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ExpireTimestampMs);
          }
          if (End.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(End);
          }
          return size;
        }

        public void MergeFrom(AuthTicket other) {
          if (other == null) {
            return;
          }
          if (other.Start.Length != 0) {
            Start = other.Start;
          }
          if (other.ExpireTimestampMs != 0UL) {
            ExpireTimestampMs = other.ExpireTimestampMs;
          }
          if (other.End.Length != 0) {
            End = other.End;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 10: {
                Start = input.ReadBytes();
                break;
              }
              case 16: {
                ExpireTimestampMs = input.ReadUInt64();
                break;
              }
              case 26: {
                End = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class RequestEnvelope : pb::IMessage<RequestEnvelope> {
        private static readonly pb::MessageParser<RequestEnvelope> _parser = new pb::MessageParser<RequestEnvelope>(() => new RequestEnvelope());
        public static pb::MessageParser<RequestEnvelope> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Envelopes.Descriptor.NestedTypes[2]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public RequestEnvelope() {
          OnConstruction();
        }

        partial void OnConstruction();

        public RequestEnvelope(RequestEnvelope other) : this() {
          statusCode_ = other.statusCode_;
          requestId_ = other.requestId_;
          requests_ = other.requests_.Clone();
          Unknown6 = other.unknown6_ != null ? other.Unknown6.Clone() : null;
          latitude_ = other.latitude_;
          longitude_ = other.longitude_;
          altitude_ = other.altitude_;
          AuthInfo = other.authInfo_ != null ? other.AuthInfo.Clone() : null;
          AuthTicket = other.authTicket_ != null ? other.AuthTicket.Clone() : null;
          unknown12_ = other.unknown12_;
        }

        public RequestEnvelope Clone() {
          return new RequestEnvelope(this);
        }

        /// <summary>Field number for the "status_code" field.</summary>
        public const int StatusCodeFieldNumber = 1;
        private int statusCode_;
        public int StatusCode {
          get { return statusCode_; }
          set {
            statusCode_ = value;
          }
        }

        /// <summary>Field number for the "request_id" field.</summary>
        public const int RequestIdFieldNumber = 3;
        private ulong requestId_;
        /// <summary>
        ///  Missing field 2.
        /// </summary>
        public ulong RequestId {
          get { return requestId_; }
          set {
            requestId_ = value;
          }
        }

        /// <summary>Field number for the "requests" field.</summary>
        public const int RequestsFieldNumber = 4;
        private static readonly pb::FieldCodec<global::POGOProtos.Requests.Request> _repeated_requests_codec
            = pb::FieldCodec.ForMessage(34, global::POGOProtos.Requests.Request.Parser);
        private readonly pbc::RepeatedField<global::POGOProtos.Requests.Request> requests_ = new pbc::RepeatedField<global::POGOProtos.Requests.Request>();
        public pbc::RepeatedField<global::POGOProtos.Requests.Request> Requests {
          get { return requests_; }
        }

        /// <summary>Field number for the "unknown6" field.</summary>
        public const int Unknown6FieldNumber = 6;
        private global::POGOProtos.Envelopes.Types.Unknown6 unknown6_;
        /// <summary>
        ///  Missing field 5.
        /// </summary>
        public global::POGOProtos.Envelopes.Types.Unknown6 Unknown6 {
          get { return unknown6_; }
          set {
            unknown6_ = value;
          }
        }

        /// <summary>Field number for the "latitude" field.</summary>
        public const int LatitudeFieldNumber = 7;
        private double latitude_;
        public double Latitude {
          get { return latitude_; }
          set {
            latitude_ = value;
          }
        }

        /// <summary>Field number for the "longitude" field.</summary>
        public const int LongitudeFieldNumber = 8;
        private double longitude_;
        public double Longitude {
          get { return longitude_; }
          set {
            longitude_ = value;
          }
        }

        /// <summary>Field number for the "altitude" field.</summary>
        public const int AltitudeFieldNumber = 9;
        private double altitude_;
        public double Altitude {
          get { return altitude_; }
          set {
            altitude_ = value;
          }
        }

        /// <summary>Field number for the "auth_info" field.</summary>
        public const int AuthInfoFieldNumber = 10;
        private global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo authInfo_;
        public global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo AuthInfo {
          get { return authInfo_; }
          set {
            authInfo_ = value;
          }
        }

        /// <summary>Field number for the "auth_ticket" field.</summary>
        public const int AuthTicketFieldNumber = 11;
        private global::POGOProtos.Envelopes.Types.AuthTicket authTicket_;
        public global::POGOProtos.Envelopes.Types.AuthTicket AuthTicket {
          get { return authTicket_; }
          set {
            authTicket_ = value;
          }
        }

        /// <summary>Field number for the "unknown12" field.</summary>
        public const int Unknown12FieldNumber = 12;
        private long unknown12_;
        public long Unknown12 {
          get { return unknown12_; }
          set {
            unknown12_ = value;
          }
        }

        public override bool Equals(object other) {
          return Equals(other as RequestEnvelope);
        }

        public bool Equals(RequestEnvelope other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (StatusCode != other.StatusCode) return false;
          if (RequestId != other.RequestId) return false;
          if(!requests_.Equals(other.requests_)) return false;
          if (!object.Equals(Unknown6, other.Unknown6)) return false;
          if (Latitude != other.Latitude) return false;
          if (Longitude != other.Longitude) return false;
          if (Altitude != other.Altitude) return false;
          if (!object.Equals(AuthInfo, other.AuthInfo)) return false;
          if (!object.Equals(AuthTicket, other.AuthTicket)) return false;
          if (Unknown12 != other.Unknown12) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
          if (RequestId != 0UL) hash ^= RequestId.GetHashCode();
          hash ^= requests_.GetHashCode();
          if (unknown6_ != null) hash ^= Unknown6.GetHashCode();
          if (Latitude != 0D) hash ^= Latitude.GetHashCode();
          if (Longitude != 0D) hash ^= Longitude.GetHashCode();
          if (Altitude != 0D) hash ^= Altitude.GetHashCode();
          if (authInfo_ != null) hash ^= AuthInfo.GetHashCode();
          if (authTicket_ != null) hash ^= AuthTicket.GetHashCode();
          if (Unknown12 != 0L) hash ^= Unknown12.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (StatusCode != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(StatusCode);
          }
          if (RequestId != 0UL) {
            output.WriteRawTag(24);
            output.WriteUInt64(RequestId);
          }
          requests_.WriteTo(output, _repeated_requests_codec);
          if (unknown6_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Unknown6);
          }
          if (Latitude != 0D) {
            output.WriteRawTag(57);
            output.WriteDouble(Latitude);
          }
          if (Longitude != 0D) {
            output.WriteRawTag(65);
            output.WriteDouble(Longitude);
          }
          if (Altitude != 0D) {
            output.WriteRawTag(73);
            output.WriteDouble(Altitude);
          }
          if (authInfo_ != null) {
            output.WriteRawTag(82);
            output.WriteMessage(AuthInfo);
          }
          if (authTicket_ != null) {
            output.WriteRawTag(90);
            output.WriteMessage(AuthTicket);
          }
          if (Unknown12 != 0L) {
            output.WriteRawTag(96);
            output.WriteInt64(Unknown12);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (StatusCode != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusCode);
          }
          if (RequestId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(RequestId);
          }
          size += requests_.CalculateSize(_repeated_requests_codec);
          if (unknown6_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unknown6);
          }
          if (Latitude != 0D) {
            size += 1 + 8;
          }
          if (Longitude != 0D) {
            size += 1 + 8;
          }
          if (Altitude != 0D) {
            size += 1 + 8;
          }
          if (authInfo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthInfo);
          }
          if (authTicket_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthTicket);
          }
          if (Unknown12 != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Unknown12);
          }
          return size;
        }

        public void MergeFrom(RequestEnvelope other) {
          if (other == null) {
            return;
          }
          if (other.StatusCode != 0) {
            StatusCode = other.StatusCode;
          }
          if (other.RequestId != 0UL) {
            RequestId = other.RequestId;
          }
          requests_.Add(other.requests_);
          if (other.unknown6_ != null) {
            if (unknown6_ == null) {
              unknown6_ = new global::POGOProtos.Envelopes.Types.Unknown6();
            }
            Unknown6.MergeFrom(other.Unknown6);
          }
          if (other.Latitude != 0D) {
            Latitude = other.Latitude;
          }
          if (other.Longitude != 0D) {
            Longitude = other.Longitude;
          }
          if (other.Altitude != 0D) {
            Altitude = other.Altitude;
          }
          if (other.authInfo_ != null) {
            if (authInfo_ == null) {
              authInfo_ = new global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo();
            }
            AuthInfo.MergeFrom(other.AuthInfo);
          }
          if (other.authTicket_ != null) {
            if (authTicket_ == null) {
              authTicket_ = new global::POGOProtos.Envelopes.Types.AuthTicket();
            }
            AuthTicket.MergeFrom(other.AuthTicket);
          }
          if (other.Unknown12 != 0L) {
            Unknown12 = other.Unknown12;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                StatusCode = input.ReadInt32();
                break;
              }
              case 24: {
                RequestId = input.ReadUInt64();
                break;
              }
              case 34: {
                requests_.AddEntriesFrom(input, _repeated_requests_codec);
                break;
              }
              case 50: {
                if (unknown6_ == null) {
                  unknown6_ = new global::POGOProtos.Envelopes.Types.Unknown6();
                }
                input.ReadMessage(unknown6_);
                break;
              }
              case 57: {
                Latitude = input.ReadDouble();
                break;
              }
              case 65: {
                Longitude = input.ReadDouble();
                break;
              }
              case 73: {
                Altitude = input.ReadDouble();
                break;
              }
              case 82: {
                if (authInfo_ == null) {
                  authInfo_ = new global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo();
                }
                input.ReadMessage(authInfo_);
                break;
              }
              case 90: {
                if (authTicket_ == null) {
                  authTicket_ = new global::POGOProtos.Envelopes.Types.AuthTicket();
                }
                input.ReadMessage(authTicket_);
                break;
              }
              case 96: {
                Unknown12 = input.ReadInt64();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the RequestEnvelope message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class AuthInfo : pb::IMessage<AuthInfo> {
            private static readonly pb::MessageParser<AuthInfo> _parser = new pb::MessageParser<AuthInfo>(() => new AuthInfo());
            public static pb::MessageParser<AuthInfo> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::POGOProtos.Envelopes.Types.RequestEnvelope.Descriptor.NestedTypes[0]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public AuthInfo() {
              OnConstruction();
            }

            partial void OnConstruction();

            public AuthInfo(AuthInfo other) : this() {
              provider_ = other.provider_;
              Token = other.token_ != null ? other.Token.Clone() : null;
            }

            public AuthInfo Clone() {
              return new AuthInfo(this);
            }

            /// <summary>Field number for the "provider" field.</summary>
            public const int ProviderFieldNumber = 1;
            private string provider_ = "";
            public string Provider {
              get { return provider_; }
              set {
                provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "token" field.</summary>
            public const int TokenFieldNumber = 2;
            private global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo.Types.JWT token_;
            public global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo.Types.JWT Token {
              get { return token_; }
              set {
                token_ = value;
              }
            }

            public override bool Equals(object other) {
              return Equals(other as AuthInfo);
            }

            public bool Equals(AuthInfo other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Provider != other.Provider) return false;
              if (!object.Equals(Token, other.Token)) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (Provider.Length != 0) hash ^= Provider.GetHashCode();
              if (token_ != null) hash ^= Token.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (Provider.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Provider);
              }
              if (token_ != null) {
                output.WriteRawTag(18);
                output.WriteMessage(Token);
              }
            }

            public int CalculateSize() {
              int size = 0;
              if (Provider.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
              }
              if (token_ != null) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Token);
              }
              return size;
            }

            public void MergeFrom(AuthInfo other) {
              if (other == null) {
                return;
              }
              if (other.Provider.Length != 0) {
                Provider = other.Provider;
              }
              if (other.token_ != null) {
                if (token_ == null) {
                  token_ = new global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo.Types.JWT();
                }
                Token.MergeFrom(other.Token);
              }
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    Provider = input.ReadString();
                    break;
                  }
                  case 18: {
                    if (token_ == null) {
                      token_ = new global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo.Types.JWT();
                    }
                    input.ReadMessage(token_);
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the AuthInfo message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static partial class Types {
              [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
              public sealed partial class JWT : pb::IMessage<JWT> {
                private static readonly pb::MessageParser<JWT> _parser = new pb::MessageParser<JWT>(() => new JWT());
                public static pb::MessageParser<JWT> Parser { get { return _parser; } }

                public static pbr::MessageDescriptor Descriptor {
                  get { return global::POGOProtos.Envelopes.Types.RequestEnvelope.Types.AuthInfo.Descriptor.NestedTypes[0]; }
                }

                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                public JWT() {
                  OnConstruction();
                }

                partial void OnConstruction();

                public JWT(JWT other) : this() {
                  contents_ = other.contents_;
                  unknown2_ = other.unknown2_;
                }

                public JWT Clone() {
                  return new JWT(this);
                }

                /// <summary>Field number for the "contents" field.</summary>
                public const int ContentsFieldNumber = 1;
                private string contents_ = "";
                public string Contents {
                  get { return contents_; }
                  set {
                    contents_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "unknown2" field.</summary>
                public const int Unknown2FieldNumber = 2;
                private int unknown2_;
                public int Unknown2 {
                  get { return unknown2_; }
                  set {
                    unknown2_ = value;
                  }
                }

                public override bool Equals(object other) {
                  return Equals(other as JWT);
                }

                public bool Equals(JWT other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Contents != other.Contents) return false;
                  if (Unknown2 != other.Unknown2) return false;
                  return true;
                }

                public override int GetHashCode() {
                  int hash = 1;
                  if (Contents.Length != 0) hash ^= Contents.GetHashCode();
                  if (Unknown2 != 0) hash ^= Unknown2.GetHashCode();
                  return hash;
                }

                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                public void WriteTo(pb::CodedOutputStream output) {
                  if (Contents.Length != 0) {
                    output.WriteRawTag(10);
                    output.WriteString(Contents);
                  }
                  if (Unknown2 != 0) {
                    output.WriteRawTag(16);
                    output.WriteInt32(Unknown2);
                  }
                }

                public int CalculateSize() {
                  int size = 0;
                  if (Contents.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Contents);
                  }
                  if (Unknown2 != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(Unknown2);
                  }
                  return size;
                }

                public void MergeFrom(JWT other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Contents.Length != 0) {
                    Contents = other.Contents;
                  }
                  if (other.Unknown2 != 0) {
                    Unknown2 = other.Unknown2;
                  }
                }

                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        input.SkipLastField();
                        break;
                      case 10: {
                        Contents = input.ReadString();
                        break;
                      }
                      case 16: {
                        Unknown2 = input.ReadInt32();
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

        }
        #endregion

      }

      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class ResponseEnvelope : pb::IMessage<ResponseEnvelope> {
        private static readonly pb::MessageParser<ResponseEnvelope> _parser = new pb::MessageParser<ResponseEnvelope>(() => new ResponseEnvelope());
        public static pb::MessageParser<ResponseEnvelope> Parser { get { return _parser; } }

        public static pbr::MessageDescriptor Descriptor {
          get { return global::POGOProtos.Envelopes.Descriptor.NestedTypes[3]; }
        }

        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        public ResponseEnvelope() {
          OnConstruction();
        }

        partial void OnConstruction();

        public ResponseEnvelope(ResponseEnvelope other) : this() {
          statusCode_ = other.statusCode_;
          responseId_ = other.responseId_;
          apiUrl_ = other.apiUrl_;
          Unknown6 = other.unknown6_ != null ? other.Unknown6.Clone() : null;
          AuthTicket = other.authTicket_ != null ? other.AuthTicket.Clone() : null;
          returns_ = other.returns_.Clone();
          error_ = other.error_;
        }

        public ResponseEnvelope Clone() {
          return new ResponseEnvelope(this);
        }

        /// <summary>Field number for the "status_code" field.</summary>
        public const int StatusCodeFieldNumber = 1;
        private int statusCode_;
        public int StatusCode {
          get { return statusCode_; }
          set {
            statusCode_ = value;
          }
        }

        /// <summary>Field number for the "response_id" field.</summary>
        public const int ResponseIdFieldNumber = 2;
        private ulong responseId_;
        public ulong ResponseId {
          get { return responseId_; }
          set {
            responseId_ = value;
          }
        }

        /// <summary>Field number for the "api_url" field.</summary>
        public const int ApiUrlFieldNumber = 3;
        private string apiUrl_ = "";
        public string ApiUrl {
          get { return apiUrl_; }
          set {
            apiUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "unknown6" field.</summary>
        public const int Unknown6FieldNumber = 6;
        private global::POGOProtos.Envelopes.Types.Unknown6 unknown6_;
        public global::POGOProtos.Envelopes.Types.Unknown6 Unknown6 {
          get { return unknown6_; }
          set {
            unknown6_ = value;
          }
        }

        /// <summary>Field number for the "auth_ticket" field.</summary>
        public const int AuthTicketFieldNumber = 7;
        private global::POGOProtos.Envelopes.Types.AuthTicket authTicket_;
        public global::POGOProtos.Envelopes.Types.AuthTicket AuthTicket {
          get { return authTicket_; }
          set {
            authTicket_ = value;
          }
        }

        /// <summary>Field number for the "returns" field.</summary>
        public const int ReturnsFieldNumber = 100;
        private static readonly pb::FieldCodec<pb::ByteString> _repeated_returns_codec
            = pb::FieldCodec.ForBytes(802);
        private readonly pbc::RepeatedField<pb::ByteString> returns_ = new pbc::RepeatedField<pb::ByteString>();
        public pbc::RepeatedField<pb::ByteString> Returns {
          get { return returns_; }
        }

        /// <summary>Field number for the "error" field.</summary>
        public const int ErrorFieldNumber = 101;
        private string error_ = "";
        public string Error {
          get { return error_; }
          set {
            error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        public override bool Equals(object other) {
          return Equals(other as ResponseEnvelope);
        }

        public bool Equals(ResponseEnvelope other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (StatusCode != other.StatusCode) return false;
          if (ResponseId != other.ResponseId) return false;
          if (ApiUrl != other.ApiUrl) return false;
          if (!object.Equals(Unknown6, other.Unknown6)) return false;
          if (!object.Equals(AuthTicket, other.AuthTicket)) return false;
          if(!returns_.Equals(other.returns_)) return false;
          if (Error != other.Error) return false;
          return true;
        }

        public override int GetHashCode() {
          int hash = 1;
          if (StatusCode != 0) hash ^= StatusCode.GetHashCode();
          if (ResponseId != 0UL) hash ^= ResponseId.GetHashCode();
          if (ApiUrl.Length != 0) hash ^= ApiUrl.GetHashCode();
          if (unknown6_ != null) hash ^= Unknown6.GetHashCode();
          if (authTicket_ != null) hash ^= AuthTicket.GetHashCode();
          hash ^= returns_.GetHashCode();
          if (Error.Length != 0) hash ^= Error.GetHashCode();
          return hash;
        }

        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        public void WriteTo(pb::CodedOutputStream output) {
          if (StatusCode != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(StatusCode);
          }
          if (ResponseId != 0UL) {
            output.WriteRawTag(16);
            output.WriteUInt64(ResponseId);
          }
          if (ApiUrl.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ApiUrl);
          }
          if (unknown6_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Unknown6);
          }
          if (authTicket_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(AuthTicket);
          }
          returns_.WriteTo(output, _repeated_returns_codec);
          if (Error.Length != 0) {
            output.WriteRawTag(170, 6);
            output.WriteString(Error);
          }
        }

        public int CalculateSize() {
          int size = 0;
          if (StatusCode != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(StatusCode);
          }
          if (ResponseId != 0UL) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ResponseId);
          }
          if (ApiUrl.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiUrl);
          }
          if (unknown6_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unknown6);
          }
          if (authTicket_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthTicket);
          }
          size += returns_.CalculateSize(_repeated_returns_codec);
          if (Error.Length != 0) {
            size += 2 + pb::CodedOutputStream.ComputeStringSize(Error);
          }
          return size;
        }

        public void MergeFrom(ResponseEnvelope other) {
          if (other == null) {
            return;
          }
          if (other.StatusCode != 0) {
            StatusCode = other.StatusCode;
          }
          if (other.ResponseId != 0UL) {
            ResponseId = other.ResponseId;
          }
          if (other.ApiUrl.Length != 0) {
            ApiUrl = other.ApiUrl;
          }
          if (other.unknown6_ != null) {
            if (unknown6_ == null) {
              unknown6_ = new global::POGOProtos.Envelopes.Types.Unknown6();
            }
            Unknown6.MergeFrom(other.Unknown6);
          }
          if (other.authTicket_ != null) {
            if (authTicket_ == null) {
              authTicket_ = new global::POGOProtos.Envelopes.Types.AuthTicket();
            }
            AuthTicket.MergeFrom(other.AuthTicket);
          }
          returns_.Add(other.returns_);
          if (other.Error.Length != 0) {
            Error = other.Error;
          }
        }

        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                input.SkipLastField();
                break;
              case 8: {
                StatusCode = input.ReadInt32();
                break;
              }
              case 16: {
                ResponseId = input.ReadUInt64();
                break;
              }
              case 26: {
                ApiUrl = input.ReadString();
                break;
              }
              case 50: {
                if (unknown6_ == null) {
                  unknown6_ = new global::POGOProtos.Envelopes.Types.Unknown6();
                }
                input.ReadMessage(unknown6_);
                break;
              }
              case 58: {
                if (authTicket_ == null) {
                  authTicket_ = new global::POGOProtos.Envelopes.Types.AuthTicket();
                }
                input.ReadMessage(authTicket_);
                break;
              }
              case 802: {
                returns_.AddEntriesFrom(input, _repeated_returns_codec);
                break;
              }
              case 810: {
                Error = input.ReadString();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ResponseEnvelope message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
          public sealed partial class Unknown7 : pb::IMessage<Unknown7> {
            private static readonly pb::MessageParser<Unknown7> _parser = new pb::MessageParser<Unknown7>(() => new Unknown7());
            public static pb::MessageParser<Unknown7> Parser { get { return _parser; } }

            public static pbr::MessageDescriptor Descriptor {
              get { return global::POGOProtos.Envelopes.Types.ResponseEnvelope.Descriptor.NestedTypes[0]; }
            }

            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            public Unknown7() {
              OnConstruction();
            }

            partial void OnConstruction();

            public Unknown7(Unknown7 other) : this() {
              unknown71_ = other.unknown71_;
              unknown72_ = other.unknown72_;
              unknown73_ = other.unknown73_;
            }

            public Unknown7 Clone() {
              return new Unknown7(this);
            }

            /// <summary>Field number for the "unknown71" field.</summary>
            public const int Unknown71FieldNumber = 1;
            private pb::ByteString unknown71_ = pb::ByteString.Empty;
            public pb::ByteString Unknown71 {
              get { return unknown71_; }
              set {
                unknown71_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "unknown72" field.</summary>
            public const int Unknown72FieldNumber = 2;
            private long unknown72_;
            public long Unknown72 {
              get { return unknown72_; }
              set {
                unknown72_ = value;
              }
            }

            /// <summary>Field number for the "unknown73" field.</summary>
            public const int Unknown73FieldNumber = 3;
            private pb::ByteString unknown73_ = pb::ByteString.Empty;
            public pb::ByteString Unknown73 {
              get { return unknown73_; }
              set {
                unknown73_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            public override bool Equals(object other) {
              return Equals(other as Unknown7);
            }

            public bool Equals(Unknown7 other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Unknown71 != other.Unknown71) return false;
              if (Unknown72 != other.Unknown72) return false;
              if (Unknown73 != other.Unknown73) return false;
              return true;
            }

            public override int GetHashCode() {
              int hash = 1;
              if (Unknown71.Length != 0) hash ^= Unknown71.GetHashCode();
              if (Unknown72 != 0L) hash ^= Unknown72.GetHashCode();
              if (Unknown73.Length != 0) hash ^= Unknown73.GetHashCode();
              return hash;
            }

            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            public void WriteTo(pb::CodedOutputStream output) {
              if (Unknown71.Length != 0) {
                output.WriteRawTag(10);
                output.WriteBytes(Unknown71);
              }
              if (Unknown72 != 0L) {
                output.WriteRawTag(16);
                output.WriteInt64(Unknown72);
              }
              if (Unknown73.Length != 0) {
                output.WriteRawTag(26);
                output.WriteBytes(Unknown73);
              }
            }

            public int CalculateSize() {
              int size = 0;
              if (Unknown71.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown71);
              }
              if (Unknown72 != 0L) {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Unknown72);
              }
              if (Unknown73.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Unknown73);
              }
              return size;
            }

            public void MergeFrom(Unknown7 other) {
              if (other == null) {
                return;
              }
              if (other.Unknown71.Length != 0) {
                Unknown71 = other.Unknown71;
              }
              if (other.Unknown72 != 0L) {
                Unknown72 = other.Unknown72;
              }
              if (other.Unknown73.Length != 0) {
                Unknown73 = other.Unknown73;
              }
            }

            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    input.SkipLastField();
                    break;
                  case 10: {
                    Unknown71 = input.ReadBytes();
                    break;
                  }
                  case 16: {
                    Unknown72 = input.ReadInt64();
                    break;
                  }
                  case 26: {
                    Unknown73 = input.ReadBytes();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
